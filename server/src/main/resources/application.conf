ktor {
    deployment {
        port = 8081
        port = ${?PORT}
        host = "0.0.0.0"
    }
    application {
        modules = [ org.cap.gold.ApplicationKt.module ]
    }
    
    # JWT Authentication Configuration
    security {
        jwt {
            # Secret key for signing JWT tokens (replace with a secure secret in production)
            secret = "your-256-bit-secret"
            secret = ${?JWT_SECRET}
            
            # Token expiration times
            accessTokenExpiration = 15m  # 15 minutes
            refreshTokenExpiration = 7d   # 7 days
            
            # Token issuer
            issuer = "capgold-server"
            
            # Token audience
            audience = "capgold-client"
            
            # Token realm
            realm = "capgold"
        }
    }
    
    # CORS Configuration
    cors {
        allowedHosts = ["*"]
    }
}

# Database Configuration
database {
    driverClassName = "org.postgresql.Driver"
    jdbcURL = "jdbc:postgresql://localhost:5432/capgold"
    jdbcURL = ${?DATABASE_URL}
    
    user = "postgres"
    user = ${?DB_USER}
    
    password = "R@g@1652"
    password = ${?DB_PASSWORD}
    
    maxPoolSize = 10
    connectionTimeout = 30000
    idleTimeout = 600000
    maxLifetime = 1800000
}

# Firebase Configuration
firebase {
    # Path to the Firebase Admin SDK service account JSON file
    # Can be overridden with FIREBASE_CREDENTIALS environment variable
    credentials = "C:/Users/gupta/Downloads/CapGold/CapGold/service-account.json"
    credentials = ${?GOOGLE_APPLICATION_CREDENTIALS}
    
    # Firebase project ID (optional, can be read from service account)
    projectId = ${?FIREBASE_PROJECT_ID}
    
    # Firebase storage bucket (optional)
    storageBucket = ${?FIREBASE_STORAGE_BUCKET}
}

# Application Settings
app {
    # Base URL for password reset links (frontend URL)
    baseUrl = "http://localhost:3000"
    baseUrl = ${?APP_BASE_URL}
    
    # Environment (development, staging, production)
    environment = "development"
    environment = ${?APP_ENV}
    
    # Enable/disable detailed error responses
    showDetailedErrorResponses = true
    showDetailedErrorResponses = ${?SHOW_DETAILED_ERRORS}
}
